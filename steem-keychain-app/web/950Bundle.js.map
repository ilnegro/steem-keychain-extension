{"version":3,"file":"950Bundle.js","mappings":"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","sources":["webpack://steem-keychain/./src/popup/steem/actions/active-rpc.actions.ts","webpack://steem-keychain/./src/popup/steem/actions/rpc-switcher.ts","webpack://steem-keychain/./src/popup/multichain/actions/has-finished-signup.actions.ts","webpack://steem-keychain/./src/popup/steem/utils/active-account.utils.ts","webpack://steem-keychain/./src/reference-data/message-type.enum.ts","webpack://steem-keychain/./src/popup/steem/actions/action-type.enum.ts","webpack://steem-keychain/./src/popup/multichain/reducers/message.reducer.ts","webpack://steem-keychain/./src/popup/multichain/reducers/navigation.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/active-account.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/app-status.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/account.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/index.ts","webpack://steem-keychain/./src/popup/steem/reducers/active-rpc.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/currency-prices.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/global-properties.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/delegation.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/conversion.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/phishing.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/transactions.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/user-token.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/tokens.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/token-history.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/token-market.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/hive-engine-config.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/rpc-switcher.reducer.ts","webpack://steem-keychain/./src/popup/steem/reducers/tokens-pending-unstaking.reducer.ts","webpack://steem-keychain/./src/popup/multichain/reducers/index.ts","webpack://steem-keychain/./src/popup/multichain/reducers/mk.reducer.ts","webpack://steem-keychain/./src/popup/multichain/reducers/loading.reducer.ts","webpack://steem-keychain/./src/popup/multichain/reducers/title-container.reducer.ts","webpack://steem-keychain/./src/popup/multichain/reducers/has-finished-signup.reducer.ts","webpack://steem-keychain/./src/popup/multichain/reducers/modal.reducer.ts","webpack://steem-keychain/./src/popup/multichain/store/index.ts","webpack://steem-keychain/./src/popup/multichain/actions/action-type.enum.ts","webpack://steem-keychain/./src/popup/steem/utils/rpc.utils.ts","webpack://steem-keychain/./src/utils/rpc-switcher.utils.ts","webpack://steem-keychain/./src/utils/array.utils.ts"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nimport { SteemTxUtils } from '@popup/steem/utils/steem-tx.utils';\r\nimport { LocalStorageKeyEnum } from '@reference-data/local-storage-key.enum';\r\nimport LocalStorageUtils from 'src/utils/localStorage.utils';\r\nexport const setActiveRpc = (rpc) => (dispatch) => __awaiter(void 0, void 0, void 0, function* () {\r\n    // console.log('[ActiveRpcActions] Setting active RPC:', rpc);\r\n    try {\r\n        // Configura SteemTxUtils\r\n        SteemTxUtils.setRpc(rpc);\r\n        // Salva l'RPC in Preferences\r\n        yield LocalStorageUtils.saveValueInLocalStorage(LocalStorageKeyEnum.CURRENT_RPC, rpc);\r\n        // console.log('[ActiveRpcActions] RPC saved to Preferences');\r\n        // Dispatch dell'azione Redux\r\n        dispatch({\r\n            type: SteemActionType.SET_ACTIVE_RPC,\r\n            payload: rpc,\r\n        });\r\n        // console.log('[ActiveRpcActions] Active RPC set');\r\n    }\r\n    catch (error) {\r\n        console.error('[ActiveRpcActions] Error setting active RPC:', error);\r\n    }\r\n});\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nexport const setSwitchToRpc = (rpc) => {\r\n    return {\r\n        type: SteemActionType.SET_SWITCH_TO_RPC,\r\n        payload: rpc,\r\n    };\r\n};\r\nexport const setDisplayChangeRpcPopup = (display) => {\r\n    return {\r\n        type: SteemActionType.SET_DISPLAY_SWITCH_RPC,\r\n        payload: display,\r\n    };\r\n};\r\n","import { MultichainActionType } from '@popup/multichain/actions/action-type.enum';\r\nexport const setHasFinishedSignup = (hasFinishedSignup) => {\r\n    return {\r\n        type: MultichainActionType.SET_HAS_FINISHED_SIGNUP,\r\n        payload: hasFinishedSignup,\r\n    };\r\n};\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { LocalStorageKeyEnum } from 'src/reference-data/local-storage-key.enum';\r\nimport LocalStorageUtils from 'src/utils/localStorage.utils';\r\nconst isEmpty = (activeAccount) => {\r\n    return (!activeAccount.account || Object.keys(activeAccount.account).length === 0);\r\n};\r\n/* istanbul ignore next */\r\nconst saveActiveAccountNameInLocalStorage = (activeAccountName) => {\r\n    LocalStorageUtils.saveValueInLocalStorage(LocalStorageKeyEnum.ACTIVE_ACCOUNT_NAME, activeAccountName);\r\n};\r\n/* istanbul ignore next */\r\nconst getActiveAccountNameFromLocalStorage = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    const account = yield LocalStorageUtils.getValueFromLocalStorage(LocalStorageKeyEnum.ACTIVE_ACCOUNT_NAME);\r\n    return account && account.length ? account : undefined;\r\n});\r\nconst removeAuthorizedAccount = (activeAccount, role, authorizedAccountName) => {\r\n    const updatedActiveAccount = Object.assign({}, activeAccount);\r\n    updatedActiveAccount.account[role] = Object.assign(Object.assign({}, updatedActiveAccount.account[role]), { account_auths: updatedActiveAccount.account[role].account_auths.filter((auth) => auth[0] !== authorizedAccountName) });\r\n    return updatedActiveAccount;\r\n};\r\nconst ActiveAccountUtils = {\r\n    isEmpty,\r\n    saveActiveAccountNameInLocalStorage,\r\n    getActiveAccountNameFromLocalStorage,\r\n    removeAuthorizedAccount,\r\n};\r\nexport default ActiveAccountUtils;\r\n","export var MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"ERROR\"] = \"ERROR\";\r\n    MessageType[\"WARNING\"] = \"WARNING\";\r\n    MessageType[\"SUCCESS\"] = \"SUCCESS\";\r\n    MessageType[\"INFO\"] = \"INFO\";\r\n})(MessageType || (MessageType = {}));\r\n","export var SteemActionType;\r\n(function (SteemActionType) {\r\n    // ACCOUNT ACTIONS\r\n    SteemActionType[\"GET_ACCOUNTS\"] = \"GET_ACCOUNTS\";\r\n    SteemActionType[\"ADD_ACCOUNT\"] = \"ADD_ACCOUNT\";\r\n    SteemActionType[\"SET_ACCOUNTS\"] = \"SET_ACCOUNTS\";\r\n    SteemActionType[\"RESET_ACCOUNT\"] = \"RESET_ACCOUNT\";\r\n    // ACTIVE ACCOUNT ACTIONS\r\n    SteemActionType[\"SET_ACTIVE_ACCOUNT\"] = \"ACTIVE_ACCOUNT\";\r\n    SteemActionType[\"SET_ACTIVE_ACCOUNT_RC\"] = \"ACTIVE_ACCOUNT_RC\";\r\n    SteemActionType[\"FORGET_ACCOUNT\"] = \"FORGET_ACCOUNT\";\r\n    SteemActionType[\"FORGET_ACCOUNTS\"] = \"FORGET_ACCOUNTS\";\r\n    SteemActionType[\"RESET_ACTIVE_ACCOUNT\"] = \"RESET_ACTIVE_ACCOUNT\";\r\n    // ACTIVE RPC ACTIONS\r\n    SteemActionType[\"SET_ACTIVE_RPC\"] = \"SET_ACTIVE_RPC\";\r\n    SteemActionType[\"ADD_CUSTOM_RPC\"] = \"ADD_CUSTOM_RPC\";\r\n    //PRICES\r\n    SteemActionType[\"LOAD_CURRENCY_PRICES\"] = \"LOAD_CURRENCY_PRICES\";\r\n    //GLOBAL PROPERTIES\r\n    SteemActionType[\"LOAD_GLOBAL_PROPS\"] = \"LOAD_GLOBAL_PROPS\";\r\n    // CONVERSION\r\n    SteemActionType[\"FETCH_CONVERSION_REQUESTS\"] = \"FETCH_CONVERSION_REQUESTS\";\r\n    // DELEGATION\r\n    SteemActionType[\"FETCH_DELEGATEES\"] = \"FETCH_DELEGATEES\";\r\n    SteemActionType[\"FETCH_DELEGATORS\"] = \"FETCH_DELEGATORS\";\r\n    SteemActionType[\"FETCH_PENDING_OUTGOING_UNDELEGATION\"] = \"FETCH_PENDING_OUTGOING_UNDELEGATION\";\r\n    // TOKEN HISTORY\r\n    SteemActionType[\"LOAD_TOKEN_HISTORY\"] = \"LOAD_TOKEN_HISTORY\";\r\n    SteemActionType[\"FETCH_MORE_TOKEN_HISTORY\"] = \"FETCH_MORE_TOKEN_HISTORY\";\r\n    SteemActionType[\"INIT_TOKEN_HISTORY\"] = \"INIT_TOKEN_HISTORY\";\r\n    SteemActionType[\"LOAD_TOKENS_MARKET\"] = \"LOAD_TOKENS_MARKET\";\r\n    SteemActionType[\"LOAD_TOKENS\"] = \"LOAD_TOKENS\";\r\n    SteemActionType[\"CLEAR_USER_TOKENS\"] = \"CLEAR_USER_TOKENS\";\r\n    SteemActionType[\"LOAD_USER_TOKENS\"] = \"LOAD_USER_TOKENS\";\r\n    SteemActionType[\"LOAD_PENDING_UNSTAKING\"] = \"LOAD_PENDING_UNSTAKING\";\r\n    // PHISHING\r\n    SteemActionType[\"FETCH_PHISHING_ACCOUNTS\"] = \"FETCH_PHISHING_ACCOUNTS\";\r\n    // TRANSACTION\r\n    SteemActionType[\"ADD_TRANSACTIONS\"] = \"ADD_TRANSACTIONS\";\r\n    SteemActionType[\"INIT_TRANSACTIONS\"] = \"INIT_TRANSACTIONS\";\r\n    // STEEM ENGINE CONFIG\r\n    SteemActionType[\"HE_SET_ACTIVE_RPC\"] = \"HE_SET_ACTIVE_RPC\";\r\n    SteemActionType[\"HE_SET_ACTIVE_ACCOUNT_HISTORY_API\"] = \"HE_SET_ACTIVE_ACCOUNT_HISTORY_API\";\r\n    SteemActionType[\"HE_LOAD_CONFIG\"] = \"HE_LOAD_CONFIG\";\r\n    // APP STATUS\r\n    SteemActionType[\"SET_APP_STATUS\"] = \"SET_APP_STATUS\";\r\n    // RPC SWITCH\r\n    SteemActionType[\"SET_SWITCH_TO_RPC\"] = \"SET_SWITCH_TO_RPC\";\r\n    SteemActionType[\"SET_DISPLAY_SWITCH_RPC\"] = \"SET_DISPLAY_SWITCH_RPC\";\r\n    SteemActionType[\"IS_LOADING\"] = \"IS_LOADING\";\r\n})(SteemActionType || (SteemActionType = {}));\r\n","import { MultichainActionType } from '@popup/multichain/actions/action-type.enum';\r\nimport { MessageType } from 'src/reference-data/message-type.enum';\r\nexport const MessageReducer = (state = { key: '', type: MessageType.SUCCESS }, { type, payload }) => {\r\n    switch (type) {\r\n        case MultichainActionType.SET_MESSAGE:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { MultichainActionType } from '@popup/multichain/actions/action-type.enum';\r\nexport const NavigationReducer = (state = { stack: [] }, { type, payload }) => {\r\n    var _a;\r\n    switch (type) {\r\n        case MultichainActionType.RESET_NAV:\r\n            return { stack: [], params: null };\r\n        case MultichainActionType.NAVIGATE_TO:\r\n        case MultichainActionType.NAVIGATE_TO_WITH_PARAMS:\r\n            return navigateTo(state, payload);\r\n        case MultichainActionType.GO_BACK: {\r\n            const newStack = state.stack;\r\n            if (newStack.length > 1) {\r\n                newStack[1].previousParams = newStack[0].params;\r\n            }\r\n            newStack.shift();\r\n            return {\r\n                stack: newStack,\r\n            };\r\n        }\r\n        case MultichainActionType.GO_BACK_TO_THEN_NAVIGATE: {\r\n            const newStack = state.stack;\r\n            const goBacktoPage = (_a = payload === null || payload === void 0 ? void 0 : payload.goBackTo) !== null && _a !== void 0 ? _a : newStack[1].currentPage;\r\n            do {\r\n                if (newStack.length > 1) {\r\n                    newStack[1].previousParams = newStack[0].params;\r\n                }\r\n                newStack.shift();\r\n            } while (goBacktoPage !== newStack[0].currentPage);\r\n            return navigateTo({ stack: newStack }, payload);\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nconst navigateTo = (state, payload) => {\r\n    let oldStack = state.stack;\r\n    if (payload === null || payload === void 0 ? void 0 : payload.resetStack) {\r\n        oldStack = [];\r\n    }\r\n    if (payload &&\r\n        payload.nextPage &&\r\n        ((state.stack[0] && payload.nextPage !== state.stack[0].currentPage) ||\r\n            !state.stack[0])) {\r\n        return {\r\n            stack: [\r\n                { currentPage: payload.nextPage, params: payload.params },\r\n                ...oldStack,\r\n            ],\r\n            params: payload.params,\r\n        };\r\n    }\r\n    else {\r\n        return state;\r\n    }\r\n};\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nexport const ActiveAccountReducer = (state = {\r\n    account: {},\r\n    keys: {},\r\n    rc: {},\r\n}, { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.SET_ACTIVE_ACCOUNT:\r\n            return Object.assign(Object.assign({}, state), payload);\r\n        case SteemActionType.SET_ACTIVE_ACCOUNT_RC:\r\n            return Object.assign(Object.assign({}, state), { rc: payload });\r\n        case SteemActionType.FORGET_ACCOUNT:\r\n        case SteemActionType.FORGET_ACCOUNTS:\r\n        case SteemActionType.RESET_ACTIVE_ACCOUNT:\r\n            return {\r\n                account: {},\r\n                keys: {},\r\n                rc: {},\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nconst INITIAL_STATE = {\r\n    processingDecryptAccount: false,\r\n    priceLoaded: false,\r\n    globalPropertiesLoaded: false,\r\n};\r\nexport const AppStatusReducer = (state = INITIAL_STATE, { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.SET_APP_STATUS:\r\n            return Object.assign(Object.assign({}, state), payload);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nexport const AccountReducer = (state = [], { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.GET_ACCOUNTS: {\r\n            const accounts = payload;\r\n            return accounts;\r\n        }\r\n        case SteemActionType.SET_ACCOUNTS: {\r\n            const accounts = payload;\r\n            return accounts;\r\n        }\r\n        case SteemActionType.ADD_ACCOUNT: {\r\n            const account = payload;\r\n            return [...state, account];\r\n        }\r\n        case SteemActionType.RESET_ACCOUNT:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { ActiveAccountReducer } from '@popup/steem/reducers/active-account.reducer';\r\nimport { ActiveRpcReducer } from '@popup/steem/reducers/active-rpc.reducer';\r\nimport { AppStatusReducer } from '@popup/steem/reducers/app-status.reducer';\r\nimport ConversionsReducer from '@popup/steem/reducers/conversion.reducer';\r\nimport CurrencyPricesReducer from '@popup/steem/reducers/currency-prices.reducer';\r\nimport DelegationsReducer from '@popup/steem/reducers/delegation.reducer';\r\nimport GlobalPropertiesReducer from '@popup/steem/reducers/global-properties.reducer';\r\nimport SteemEngineConfigReducer from '@popup/steem/reducers/hive-engine-config.reducer';\r\nimport { PhishingReducer } from '@popup/steem/reducers/phishing.reducer';\r\nimport { RpcSwitcherReducer } from '@popup/steem/reducers/rpc-switcher.reducer';\r\nimport TokenHistoryReducer from '@popup/steem/reducers/token-history.reducer';\r\nimport TokenMarketReducer from '@popup/steem/reducers/token-market.reducer';\r\nimport TokensPendingUnstakingReducer from '@popup/steem/reducers/tokens-pending-unstaking.reducer';\r\nimport TokensReducer from '@popup/steem/reducers/tokens.reducer';\r\nimport transactionsReducer from '@popup/steem/reducers/transactions.reducer';\r\nimport UserTokensReducer from '@popup/steem/reducers/user-token.reducer';\r\nimport { combineReducers } from 'redux';\r\nimport { AccountReducer } from './account.reducer';\r\nconst steemReducers = combineReducers({\r\n    accounts: AccountReducer,\r\n    activeAccount: ActiveAccountReducer,\r\n    activeRpc: ActiveRpcReducer,\r\n    currencyPrices: CurrencyPricesReducer,\r\n    globalProperties: GlobalPropertiesReducer,\r\n    delegations: DelegationsReducer,\r\n    conversions: ConversionsReducer,\r\n    phishing: PhishingReducer,\r\n    transactions: transactionsReducer,\r\n    userTokens: UserTokensReducer,\r\n    tokens: TokensReducer,\r\n    tokenHistory: TokenHistoryReducer,\r\n    tokenMarket: TokenMarketReducer,\r\n    steemEngineConfig: SteemEngineConfigReducer,\r\n    appStatus: AppStatusReducer,\r\n    rpcSwitcher: RpcSwitcherReducer,\r\n    tokensPendingUnstaking: TokensPendingUnstakingReducer,\r\n});\r\nexport default steemReducers;\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nexport const ActiveRpcReducer = (state = { uri: 'NULL', testnet: false }, { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.SET_ACTIVE_RPC:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nconst CurrencyPricesReducer = (state = { bitcoin: {}, steem: {}, steem_dollars: {} }, { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.LOAD_CURRENCY_PRICES:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default CurrencyPricesReducer;\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nconst GlobalPropertiesReducer = (state = {}, { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.LOAD_GLOBAL_PROPS:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default GlobalPropertiesReducer;\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nconst DelegationsReducer = (state = {\r\n    incoming: [],\r\n    outgoing: [],\r\n    pendingOutgoingUndelegation: [],\r\n}, { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.FETCH_DELEGATEES:\r\n            return Object.assign(Object.assign({}, state), { outgoing: payload.outgoing });\r\n        case SteemActionType.FETCH_DELEGATORS:\r\n            return Object.assign(Object.assign({}, state), { incoming: payload.incoming });\r\n        case SteemActionType.FETCH_PENDING_OUTGOING_UNDELEGATION:\r\n            return Object.assign(Object.assign({}, state), { pendingOutgoingUndelegation: payload.pendingOutgoingUndelegation });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default DelegationsReducer;\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nconst ConversionsReducer = (state = [], { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.FETCH_CONVERSION_REQUESTS:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default ConversionsReducer;\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nexport const PhishingReducer = (state = [], { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.FETCH_PHISHING_ACCOUNTS:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nimport ArrayUtils from 'src/utils/array.utils';\r\nconst TransactionReducer = (state = { loading: false, list: [], lastUsedStart: -1 }, { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.SET_ACTIVE_ACCOUNT: // action related to active account. Here used to reset the transaction list\r\n            return { loading: true, list: [], lastUsedStart: -1 };\r\n        case SteemActionType.INIT_TRANSACTIONS:\r\n            return { loading: false, list: payload };\r\n        case SteemActionType.ADD_TRANSACTIONS:\r\n            return Object.assign(Object.assign({}, state), { list: ArrayUtils.mergeWithoutDuplicate(state.list, payload[0], 'key'), lastUsedStart: payload[0][payload[0].length - 1].txId });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default TransactionReducer;\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nconst UserTokensReducer = (state = { loading: false, list: [] }, { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.CLEAR_USER_TOKENS:\r\n            return { loading: true, list: [] };\r\n        case SteemActionType.LOAD_USER_TOKENS:\r\n            return { loading: false, list: payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default UserTokensReducer;\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nconst TokensReducer = (state = [], { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.LOAD_TOKENS:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default TokensReducer;\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nconst TokenHistoryReducer = (state = {\r\n    loading: false,\r\n    shouldLoadMore: false,\r\n    list: [],\r\n}, { type, payload, }) => {\r\n    switch (type) {\r\n        case SteemActionType.INIT_TOKEN_HISTORY:\r\n            return { loading: true, list: [], shouldLoadMore: false };\r\n        case SteemActionType.LOAD_TOKEN_HISTORY:\r\n            return {\r\n                loading: false,\r\n                list: payload === null || payload === void 0 ? void 0 : payload.transactions,\r\n                shouldLoadMore: payload === null || payload === void 0 ? void 0 : payload.shouldLoadMore,\r\n            };\r\n        case SteemActionType.FETCH_MORE_TOKEN_HISTORY:\r\n            return {\r\n                loading: false,\r\n                list: [...state.list, ...payload === null || payload === void 0 ? void 0 : payload.transactions],\r\n                shouldLoadMore: payload === null || payload === void 0 ? void 0 : payload.shouldLoadMore,\r\n            };\r\n        case SteemActionType.IS_LOADING:\r\n            return Object.assign(Object.assign({}, state), { loading: true });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default TokenHistoryReducer;\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nconst TokenMarketReducer = (state = [], { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.LOAD_TOKENS_MARKET:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default TokenMarketReducer;\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nimport Config from 'src/config';\r\nconst SteemEngineConfigReducer = (state = {\r\n    rpc: Config.steemEngine.rpc,\r\n    mainnet: Config.steemEngine.mainnet,\r\n    accountHistoryApi: Config.steemEngine.accountHistoryApi,\r\n}, { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.HE_SET_ACTIVE_ACCOUNT_HISTORY_API:\r\n            return Object.assign(Object.assign({}, state), { accountHistoryApi: payload === null || payload === void 0 ? void 0 : payload.accountHistoryApi });\r\n        case SteemActionType.HE_SET_ACTIVE_RPC:\r\n            return Object.assign(Object.assign({}, state), { rpc: payload === null || payload === void 0 ? void 0 : payload.rpc });\r\n        case SteemActionType.HE_LOAD_CONFIG:\r\n            return Object.assign(Object.assign({}, state), { rpc: payload === null || payload === void 0 ? void 0 : payload.rpc, accountHistoryApi: payload === null || payload === void 0 ? void 0 : payload.accountHistoryApi });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default SteemEngineConfigReducer;\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nexport const RpcSwitcherReducer = (state = { display: false }, { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.SET_SWITCH_TO_RPC:\r\n            return Object.assign(Object.assign({}, state), { rpc: payload });\r\n        case SteemActionType.SET_DISPLAY_SWITCH_RPC:\r\n            return Object.assign(Object.assign({}, state), { display: payload });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { SteemActionType } from '@popup/steem/actions/action-type.enum';\r\nconst TokensPendingUnstakingReducer = (state = [], { type, payload }) => {\r\n    switch (type) {\r\n        case SteemActionType.LOAD_PENDING_UNSTAKING:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default TokensPendingUnstakingReducer;\r\n","import { HasFinishedSignupReducer } from '@popup/multichain/reducers/has-finished-signup.reducer';\r\nimport { LoadingReducer } from '@popup/multichain/reducers/loading.reducer';\r\nimport { MessageReducer } from '@popup/multichain/reducers/message.reducer';\r\nimport { MkReducer } from '@popup/multichain/reducers/mk.reducer';\r\nimport { ModalReducer } from '@popup/multichain/reducers/modal.reducer';\r\nimport { NavigationReducer } from '@popup/multichain/reducers/navigation.reducer';\r\nimport { TitleContainerReducer } from '@popup/multichain/reducers/title-container.reducer';\r\nimport steemReducers from '@popup/steem/reducers';\r\nimport { combineReducers } from 'redux';\r\nexport default combineReducers({\r\n    mk: MkReducer,\r\n    message: MessageReducer,\r\n    navigation: NavigationReducer,\r\n    loading: LoadingReducer,\r\n    titleContainer: TitleContainerReducer,\r\n    steem: steemReducers,\r\n    hasFinishedSignup: HasFinishedSignupReducer,\r\n    modal: ModalReducer,\r\n});\r\n","import { MultichainActionType } from '@popup/multichain/actions/action-type.enum';\r\nexport const MkReducer = (state = '', { type, payload }) => {\r\n    switch (type) {\r\n        case MultichainActionType.SET_MK:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { MultichainActionType } from '@popup/multichain/actions/action-type.enum';\r\nexport const LoadingReducer = (state = { loadingOperations: [], caption: undefined }, { type, payload, }) => {\r\n    switch (type) {\r\n        case MultichainActionType.ADD_TO_LOADING_LIST: {\r\n            const loadingPayload = payload;\r\n            if (state.loadingOperations.find((loadingItem) => loadingItem.name === (loadingPayload === null || loadingPayload === void 0 ? void 0 : loadingPayload.operation))) {\r\n                const newState = { loadingOperations: [...state.loadingOperations] };\r\n                for (let loadingOperation of newState.loadingOperations) {\r\n                    if (loadingOperation.name === (loadingPayload === null || loadingPayload === void 0 ? void 0 : loadingPayload.operation)) {\r\n                        loadingOperation.done = false;\r\n                    }\r\n                }\r\n                return newState;\r\n            }\r\n            else {\r\n                const newState = {\r\n                    loadingOperations: [...state.loadingOperations],\r\n                    caption: state.caption,\r\n                };\r\n                newState.loadingOperations.push({\r\n                    name: loadingPayload.operation,\r\n                    operationParams: loadingPayload.operationParams,\r\n                    hideDots: loadingPayload.hideDots,\r\n                    done: false,\r\n                });\r\n                return newState;\r\n            }\r\n        }\r\n        case MultichainActionType.REMOVE_FROM_LOADING_LIST: {\r\n            const loadingPayload = payload;\r\n            const newState = {\r\n                loadingOperations: [...state.loadingOperations],\r\n                caption: state.caption,\r\n                loadingPercentage: state.loadingPercentage,\r\n            };\r\n            for (let loadingOperation of newState.loadingOperations) {\r\n                if (loadingOperation.name === (loadingPayload === null || loadingPayload === void 0 ? void 0 : loadingPayload.operation)) {\r\n                    loadingOperation.done = true;\r\n                }\r\n            }\r\n            return newState.loadingOperations.some((loadingOperation) => loadingOperation.done === false)\r\n                ? newState\r\n                : {\r\n                    loadingOperations: [],\r\n                    caption: undefined,\r\n                    loadingPercentage: undefined,\r\n                };\r\n        }\r\n        case MultichainActionType.ADD_CAPTION_TO_LOADING_PAGE: {\r\n            const setCaptionPayload = payload;\r\n            const newState = {\r\n                loadingOperations: [...state.loadingOperations],\r\n                caption: setCaptionPayload.caption,\r\n                loadingPercentage: state.loadingPercentage,\r\n            };\r\n            return newState;\r\n        }\r\n        case MultichainActionType.ADD_LOADING_PERCENTAGE: {\r\n            const setLoadingPercentagePayload = payload;\r\n            const newState = {\r\n                loadingOperations: [...state.loadingOperations],\r\n                caption: state.caption,\r\n                loadingPercentage: setLoadingPercentagePayload.loadingPercentage,\r\n            };\r\n            return newState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { MultichainActionType } from '@popup/multichain/actions/action-type.enum';\r\nexport const TitleContainerReducer = (state = { title: '' }, { type, payload }) => {\r\n    switch (type) {\r\n        case MultichainActionType.SET_TITLE_PROPERTIES:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { MultichainActionType } from '@popup/multichain/actions/action-type.enum';\r\nexport const HasFinishedSignupReducer = (state = null, { type, payload }) => {\r\n    switch (type) {\r\n        case MultichainActionType.SET_HAS_FINISHED_SIGNUP:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { MultichainActionType } from '@popup/multichain/actions/action-type.enum';\r\nexport const ModalReducer = (state = null, { type, payload }) => {\r\n    switch (type) {\r\n        case MultichainActionType.OPEN_MODAL: {\r\n            return payload;\r\n        }\r\n        case MultichainActionType.CLOSE_MODAL: {\r\n            return null;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar _a;\r\nimport { setHasFinishedSignup } from '@popup/multichain/actions/has-finished-signup.actions';\r\nimport reducers from '@popup/multichain/reducers';\r\nimport { LocalStorageKeyEnum } from '@reference-data/local-storage-key.enum';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n// import {composeWithDevTools} from 'remote-redux-devtools';\r\nimport AccountUtils from '@popup/steem/utils/account.utils';\r\nimport ActiveAccountUtils from '@popup/steem/utils/active-account.utils';\r\nimport RpcUtils from '@popup/steem/utils/rpc.utils';\r\nimport LocalStorageUtils from 'src/utils/localStorage.utils';\r\n// const composeEnhancers = composeWithDevTools({\r\n//   realtime: true,\r\n//   port: 8000,\r\n// });\r\n/* istanbul ignore next */\r\nconst store = createStore(reducers, \r\n/* preloadedState, */ applyMiddleware(thunk));\r\nif (store.getState().steem) {\r\n    let previousAccounts = store.getState().steem.accounts;\r\n    let previousRpc = store.getState().steem.activeRpc;\r\n    let previousActiveAccountName = (_a = store.getState().steem.activeAccount) === null || _a === void 0 ? void 0 : _a.name;\r\n    let previousMk = store.getState().mk;\r\n    let previousSteemEngineConfig = store.getState().steem.steemEngineConfig;\r\n    /* istanbul ignore next */\r\n    store.subscribe(() => {\r\n        const { mk, steem: { accounts, activeRpc, activeAccount, steemEngineConfig }, hasFinishedSignup, } = store.getState();\r\n        const saveChanges = () => __awaiter(void 0, void 0, void 0, function* () {\r\n            if (!AccountUtils.isAccountListIdentical(previousAccounts, accounts)) {\r\n                if (previousAccounts.length === 0 &&\r\n                    previousAccounts.length !== accounts.length &&\r\n                    !hasFinishedSignup) {\r\n                    yield LocalStorageUtils.saveValueInLocalStorage(LocalStorageKeyEnum.HAS_FINISHED_SIGNUP, true);\r\n                    store.dispatch(setHasFinishedSignup(true));\r\n                    // AnalyticsUtils.sendAddFirstAccountEvent();\r\n                }\r\n                previousAccounts = accounts;\r\n                if (accounts.length !== 0) {\r\n                    AccountUtils.saveAccounts(accounts, mk);\r\n                }\r\n            }\r\n            if (previousRpc && previousRpc.uri !== (activeRpc === null || activeRpc === void 0 ? void 0 : activeRpc.uri) && activeRpc) {\r\n                previousRpc = activeRpc;\r\n                RpcUtils.saveCurrentRpc(activeRpc);\r\n            }\r\n            if (activeAccount && previousActiveAccountName !== activeAccount.name) {\r\n                previousActiveAccountName = activeAccount.name;\r\n                ActiveAccountUtils.saveActiveAccountNameInLocalStorage(activeAccount.name);\r\n            }\r\n            if (previousMk !== mk) {\r\n                previousMk = mk;\r\n                //        MkUtils.saveMkInLocalStorage(mk);\r\n            }\r\n            if (previousSteemEngineConfig &&\r\n                steemEngineConfig &&\r\n                (previousSteemEngineConfig.accountHistoryApi !==\r\n                    steemEngineConfig.accountHistoryApi ||\r\n                    previousSteemEngineConfig.rpc !== steemEngineConfig.rpc)) {\r\n                previousSteemEngineConfig = steemEngineConfig;\r\n                yield LocalStorageUtils.saveValueInLocalStorage(LocalStorageKeyEnum.STEEM_ENGINE_ACTIVE_CONFIG, steemEngineConfig);\r\n            }\r\n        });\r\n        saveChanges();\r\n    });\r\n}\r\nexport { store };\r\n","export var MultichainActionType;\r\n(function (MultichainActionType) {\r\n    MultichainActionType[\"TEST_MSG\"] = \"TEST_MSG\";\r\n    MultichainActionType[\"SET_MK\"] = \"SET_MK\";\r\n    // ERROR ACTIONS\r\n    MultichainActionType[\"SET_MESSAGE\"] = \"SET_MESSAGE\";\r\n    // MODAL ACTIONS\r\n    MultichainActionType[\"OPEN_MODAL\"] = \"OPEN_MODAL\";\r\n    MultichainActionType[\"CLOSE_MODAL\"] = \"CLOSE_MODAL\";\r\n    // NAVIGATION ACTIONS\r\n    MultichainActionType[\"NAVIGATE_TO\"] = \"NAVIGATE_TO\";\r\n    MultichainActionType[\"NAVIGATE_TO_WITH_PARAMS\"] = \"NAVIGATE_TO_WITH_PARAMS\";\r\n    MultichainActionType[\"GO_BACK\"] = \"GO_BACK\";\r\n    MultichainActionType[\"RESET_NAV\"] = \"RESET_NAV\";\r\n    MultichainActionType[\"GO_BACK_TO_THEN_NAVIGATE\"] = \"GO_BACK_TO_THEN_NAVIGATE\";\r\n    // LOADING\r\n    MultichainActionType[\"SET_LOADING\"] = \"SET_LOADING\";\r\n    MultichainActionType[\"ADD_TO_LOADING_LIST\"] = \"ADD_TO_LOADING_LIST\";\r\n    MultichainActionType[\"REMOVE_FROM_LOADING_LIST\"] = \"REMOVE_FROM_LOADING_LIST\";\r\n    MultichainActionType[\"ADD_CAPTION_TO_LOADING_PAGE\"] = \"ADD_CAPTION_TO_LOADING_PAGE\";\r\n    MultichainActionType[\"ADD_LOADING_PERCENTAGE\"] = \"ADD_LOADING_PERCENTAGE\";\r\n    // TITLE CONTAINER\r\n    MultichainActionType[\"SET_TITLE_PROPERTIES\"] = \"SET_TITLE_PROPERTIES\";\r\n    MultichainActionType[\"RESET_TITLE_PROPERTIES\"] = \"RESET_ACTION_PROPERTIES\";\r\n    MultichainActionType[\"SET_HAS_FINISHED_SIGNUP\"] = \"SET_HAS_FINISHED_SIGNUP\";\r\n})(MultichainActionType || (MultichainActionType = {}));\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { SteemTxUtils } from '@popup/steem/utils/steem-tx.utils';\r\nimport axios from 'axios';\r\nimport { DefaultRpcs } from 'src/reference-data/default-rpc.list';\r\nimport { LocalStorageKeyEnum } from 'src/reference-data/local-storage-key.enum';\r\nimport LocalStorageUtils from 'src/utils/localStorage.utils';\r\nimport Logger from 'src/utils/logger.utils';\r\nconst getFullList = () => {\r\n    return DefaultRpcs.map((rpc) => {\r\n        return Object.assign(Object.assign({}, rpc), { uri: rpc.uri.endsWith('/')\r\n                ? rpc.uri.substring(0, rpc.uri.length - 1)\r\n                : rpc.uri });\r\n    });\r\n};\r\nconst isDefault = (rpc) => {\r\n    return (DefaultRpcs.find((r) => {\r\n        const defaultUri = r.uri.trim().endsWith('/')\r\n            ? r.uri.trim().substring(0, r.uri.trim().length - 1)\r\n            : r.uri.trim();\r\n        const uri = rpc.uri.trim().endsWith('/')\r\n            ? rpc.uri.trim().substring(0, rpc.uri.trim().length - 1)\r\n            : rpc.uri.trim();\r\n        return defaultUri === uri;\r\n    }) !== undefined);\r\n};\r\nconst getCustomRpcs = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    const customRpcs = yield LocalStorageUtils.getValueFromLocalStorage(LocalStorageKeyEnum.RPC_LIST);\r\n    return customRpcs ? customRpcs : [];\r\n});\r\nconst addCustomRpc = (rpc) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const savedCustomRpc = yield LocalStorageUtils.getValueFromLocalStorage(LocalStorageKeyEnum.RPC_LIST);\r\n    const newRpcList = savedCustomRpc ? savedCustomRpc : [];\r\n    newRpcList.push(rpc);\r\n    LocalStorageUtils.saveValueInLocalStorage(LocalStorageKeyEnum.RPC_LIST, newRpcList);\r\n});\r\nconst deleteCustomRpc = (rpcs, rpc) => {\r\n    const newRpcs = rpcs.filter((r) => rpc.uri !== r.uri);\r\n    saveCustomRpc(newRpcs);\r\n    return newRpcs;\r\n};\r\nconst getCurrentRpc = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    let currentRpc = yield LocalStorageUtils.getValueFromLocalStorage(LocalStorageKeyEnum.CURRENT_RPC);\r\n    currentRpc = currentRpc ? currentRpc : { uri: 'DEFAULT', testnet: false };\r\n    if (currentRpc.uri.endsWith('/'))\r\n        currentRpc = Object.assign(Object.assign({}, currentRpc), { uri: currentRpc.uri.substring(0, currentRpc.uri.length - 1) });\r\n    return currentRpc;\r\n});\r\n/* istanbul ignore next */\r\nconst saveCustomRpc = (rpcs) => {\r\n    LocalStorageUtils.saveValueInLocalStorage(LocalStorageKeyEnum.RPC_LIST, rpcs);\r\n};\r\n/* istanbul ignore next */\r\nconst saveCurrentRpc = (rpc) => {\r\n    LocalStorageUtils.saveValueInLocalStorage(LocalStorageKeyEnum.CURRENT_RPC, rpc);\r\n};\r\nconst findRpc = (uri) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const list = [...getFullList(), ...(yield RpcUtils.getCustomRpcs())];\r\n    return list.find((e) => e.uri === uri || e.uri === uri + '/' || e.uri + '/' === uri);\r\n});\r\nconst checkRpcStatus = (uri) => __awaiter(void 0, void 0, void 0, function* () {\r\n    axios.interceptors.response.use((response) => {\r\n        return response;\r\n    }, (error) => {\r\n        throw new Error('RPC NOK ' + uri + ' ' + error);\r\n    });\r\n    try {\r\n        const result = yield SteemTxUtils.getData('condenser_api.get_config', []);\r\n        if (result === null || result === void 0 ? void 0 : result.STEEM_ADDRESS_PREFIX) {\r\n            return true;\r\n        }\r\n        return false;\r\n        // const result = await axios.get(\r\n        //   ['DEFAULT', 'https://api.steemit.com'].includes(uri)\r\n        //     ? 'https://api.steemit.com'\r\n        //     : `${uri}/health`,\r\n        //   {\r\n        //     timeout: 10000,\r\n        //   },\r\n        // );\r\n        // if (result?.data?.error) {\r\n        //   return false;\r\n        // }\r\n        // return true;\r\n    }\r\n    catch (err) {\r\n        Logger.error('error', err);\r\n        return false;\r\n    }\r\n});\r\n// const test = async () => {\r\n//   const list = [...getFullList(), ...(await RpcUtils.getCustomRpcs())];\r\n//   for (const rpc of list) {\r\n//     try {\r\n//       const start = Date.now();\r\n//       await HiveTxUtils.setRpc(rpc);\r\n//       const res = await HiveTxUtils.getData(\r\n//         'transaction_status_api.find_transaction',\r\n//         { transaction_id: 'f5178d311dd17927d460e8674cabd074df8e24fe' },\r\n//       );\r\n//       const end = Date.now();\r\n//       if (res.status) {\r\n//         // console.log(`${rpc.uri} responded in ${end - start}ms`);\r\n//       } else {\r\n//         // console.log(`${rpc.uri} responded without status`);\r\n//       }\r\n//     } catch (e) {\r\n//       // console.log(`${rpc.uri} had an error`, e);\r\n//     }\r\n//   }\r\n// };\r\nconst RpcUtils = {\r\n    getFullList,\r\n    addCustomRpc,\r\n    getCurrentRpc,\r\n    saveCurrentRpc,\r\n    getCustomRpcs,\r\n    isDefault,\r\n    saveCustomRpc,\r\n    deleteCustomRpc,\r\n    findRpc,\r\n    checkRpcStatus,\r\n};\r\nexport default RpcUtils;\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { setActiveRpc } from '@popup/steem/actions/active-rpc.actions';\r\nimport { setDisplayChangeRpcPopup, setSwitchToRpc, } from '@popup/steem/actions/rpc-switcher';\r\nimport RpcUtils from '@popup/steem/utils/rpc.utils';\r\nimport { LocalStorageKeyEnum } from '@reference-data/local-storage-key.enum';\r\nimport LocalStorageUtils from 'src/utils/localStorage.utils';\r\nimport { store } from '@popup/multichain/store';\r\nexport const useWorkingRPC = (activeRpc) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const dispatch = store.dispatch; // Usa il tipo corretto\r\n    const switchAuto = yield LocalStorageUtils.getValueFromLocalStorage(LocalStorageKeyEnum.SWITCH_RPC_AUTO);\r\n    const currentRpc = activeRpc || store.getState().steem.activeRpc;\r\n    for (const rpc of RpcUtils.getFullList().filter((rpc) => rpc.uri !== (currentRpc === null || currentRpc === void 0 ? void 0 : currentRpc.uri) && !rpc.testnet)) {\r\n        if (yield RpcUtils.checkRpcStatus(rpc.uri)) {\r\n            if (switchAuto) {\r\n                yield dispatch(setActiveRpc(rpc)); // Usa await per il thunk\r\n            }\r\n            else {\r\n                dispatch(setSwitchToRpc(rpc));\r\n                dispatch(setDisplayChangeRpcPopup(true));\r\n            }\r\n            return;\r\n        }\r\n    }\r\n});\r\n","const mergeWithoutDuplicate = (a, b, key) => {\r\n    var list = [...a, ...b];\r\n    for (var i = 0; i < list.length; ++i) {\r\n        for (var j = i + 1; j < list.length; ++j) {\r\n            if (key) {\r\n                if (list[i][key] === list[j][key])\r\n                    list.splice(j--, 1);\r\n            }\r\n            else {\r\n                if (list[i] === list[j])\r\n                    list.splice(j--, 1);\r\n            }\r\n        }\r\n    }\r\n    return list;\r\n};\r\nconst getMaxValue = (list, property) => {\r\n    let max = 0;\r\n    for (const elem of list) {\r\n        if ((property && elem[property] > max) || elem > max) {\r\n            max = property ? elem[property] : elem;\r\n        }\r\n    }\r\n    return max;\r\n};\r\nconst getMinValue = (list, property) => {\r\n    let min = Number.MAX_SAFE_INTEGER;\r\n    for (const elem of list) {\r\n        if ((property && elem[property] < min) || elem < min) {\r\n            min = property ? elem[property] : elem;\r\n        }\r\n    }\r\n    return min;\r\n};\r\nconst findCommons = (listA, listB) => {\r\n    const commons = [];\r\n    for (const item of listA) {\r\n        if (listB.includes(item))\r\n            commons.push(item);\r\n    }\r\n    return commons;\r\n};\r\nconst ArrayUtils = {\r\n    mergeWithoutDuplicate,\r\n    getMaxValue,\r\n    getMinValue,\r\n    findCommons,\r\n};\r\nexport default ArrayUtils;\r\n"],"names":["setActiveRpc","rpc","dispatch","__awaiter","thisArg","_arguments","generator","setRpc","saveValueInLocalStorage","CURRENT_RPC","type","SET_ACTIVE_RPC","payload","error","console","P","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","setSwitchToRpc","SET_SWITCH_TO_RPC","setDisplayChangeRpcPopup","display","SET_DISPLAY_SWITCH_RPC","setHasFinishedSignup","hasFinishedSignup","SET_HAS_FINISHED_SIGNUP","isEmpty","activeAccount","account","Object","keys","length","saveActiveAccountNameInLocalStorage","activeAccountName","ACTIVE_ACCOUNT_NAME","getActiveAccountNameFromLocalStorage","getValueFromLocalStorage","undefined","removeAuthorizedAccount","role","authorizedAccountName","updatedActiveAccount","assign","account_auths","filter","auth","MessageType","SteemActionType","navigateTo","state","oldStack","stack","resetStack","nextPage","currentPage","params","INITIAL_STATE","processingDecryptAccount","priceLoaded","globalPropertiesLoaded","accounts","GET_ACCOUNTS","SET_ACCOUNTS","ADD_ACCOUNT","RESET_ACCOUNT","rc","SET_ACTIVE_ACCOUNT","SET_ACTIVE_ACCOUNT_RC","FORGET_ACCOUNT","FORGET_ACCOUNTS","RESET_ACTIVE_ACCOUNT","activeRpc","uri","testnet","currencyPrices","bitcoin","steem","steem_dollars","LOAD_CURRENCY_PRICES","globalProperties","LOAD_GLOBAL_PROPS","delegations","incoming","outgoing","pendingOutgoingUndelegation","FETCH_DELEGATEES","FETCH_DELEGATORS","FETCH_PENDING_OUTGOING_UNDELEGATION","conversions","FETCH_CONVERSION_REQUESTS","phishing","FETCH_PHISHING_ACCOUNTS","transactions","loading","list","lastUsedStart","INIT_TRANSACTIONS","ADD_TRANSACTIONS","A","mergeWithoutDuplicate","txId","userTokens","CLEAR_USER_TOKENS","LOAD_USER_TOKENS","tokens","LOAD_TOKENS","tokenHistory","shouldLoadMore","INIT_TOKEN_HISTORY","LOAD_TOKEN_HISTORY","FETCH_MORE_TOKEN_HISTORY","IS_LOADING","tokenMarket","LOAD_TOKENS_MARKET","steemEngineConfig","steemEngine","mainnet","accountHistoryApi","HE_SET_ACTIVE_ACCOUNT_HISTORY_API","HE_SET_ACTIVE_RPC","HE_LOAD_CONFIG","appStatus","SET_APP_STATUS","rpcSwitcher","tokensPendingUnstaking","LOAD_PENDING_UNSTAKING","mk","SET_MK","message","key","SUCCESS","SET_MESSAGE","navigation","_a","RESET_NAV","NAVIGATE_TO","NAVIGATE_TO_WITH_PARAMS","GO_BACK","newStack","previousParams","shift","GO_BACK_TO_THEN_NAVIGATE","goBacktoPage","goBackTo","loadingOperations","caption","ADD_TO_LOADING_LIST","loadingPayload","find","loadingItem","name","operation","newState","loadingOperation","push","operationParams","hideDots","REMOVE_FROM_LOADING_LIST","loadingPercentage","some","ADD_CAPTION_TO_LOADING_PAGE","setCaptionPayload","ADD_LOADING_PERCENTAGE","setLoadingPercentagePayload","titleContainer","title","SET_TITLE_PROPERTIES","modal","OPEN_MODAL","CLOSE_MODAL","store","getState","previousAccounts","previousRpc","previousActiveAccountName","previousMk","previousSteemEngineConfig","subscribe","isAccountListIdentical","HAS_FINISHED_SIGNUP","saveAccounts","saveCurrentRpc","STEEM_ENGINE_ACTIVE_CONFIG","MultichainActionType","getFullList","map","endsWith","substring","saveCustomRpc","rpcs","RPC_LIST","RpcUtils","addCustomRpc","newRpcList","getCurrentRpc","currentRpc","getCustomRpcs","isDefault","r","trim","deleteCustomRpc","newRpcs","findRpc","checkRpcStatus","response","use","Error","getData","STEEM_ADDRESS_PREFIX","err","useWorkingRPC","switchAuto","SWITCH_RPC_AUTO","a","b","i","j","splice","getMaxValue","property","max","elem","getMinValue","min","Number","MAX_SAFE_INTEGER","findCommons","listA","listB","commons","item","includes"],"sourceRoot":""}